/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicOnlyRouteImport } from './routes/_public-only/route'
import { Route as PrivateRouteImport } from './routes/_private/route'
import { Route as IndexImport } from './routes/index'
import { Route as PublicOnlySignupImport } from './routes/_public-only/signup'
import { Route as PublicOnlyLoginImport } from './routes/_public-only/login'
import { Route as publicIntakeImport } from './routes/(public)/intake'
import { Route as PrivateDashboardRouteImport } from './routes/_private/dashboard/route'
import { Route as PrivateDashboardExpertsImport } from './routes/_private/dashboard/experts'
import { Route as PrivateDashboardRequestsRouteImport } from './routes/_private/dashboard/requests/route'
import { Route as PrivateDashboardRequestsIndexImport } from './routes/_private/dashboard/requests/index'
import { Route as PrivateDashboardRequestsRequestIdImport } from './routes/_private/dashboard/requests/$requestId'

// Create/Update Routes

const PublicOnlyRouteRoute = PublicOnlyRouteImport.update({
  id: '/_public-only',
  getParentRoute: () => rootRoute,
} as any)

const PrivateRouteRoute = PrivateRouteImport.update({
  id: '/_private',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PublicOnlySignupRoute = PublicOnlySignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => PublicOnlyRouteRoute,
} as any)

const PublicOnlyLoginRoute = PublicOnlyLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => PublicOnlyRouteRoute,
} as any)

const publicIntakeRoute = publicIntakeImport.update({
  id: '/(public)/intake',
  path: '/intake',
  getParentRoute: () => rootRoute,
} as any)

const PrivateDashboardRouteRoute = PrivateDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => PrivateRouteRoute,
} as any)

const PrivateDashboardExpertsRoute = PrivateDashboardExpertsImport.update({
  id: '/experts',
  path: '/experts',
  getParentRoute: () => PrivateDashboardRouteRoute,
} as any)

const PrivateDashboardRequestsRouteRoute =
  PrivateDashboardRequestsRouteImport.update({
    id: '/requests',
    path: '/requests',
    getParentRoute: () => PrivateDashboardRouteRoute,
  } as any)

const PrivateDashboardRequestsIndexRoute =
  PrivateDashboardRequestsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => PrivateDashboardRequestsRouteRoute,
  } as any)

const PrivateDashboardRequestsRequestIdRoute =
  PrivateDashboardRequestsRequestIdImport.update({
    id: '/$requestId',
    path: '/$requestId',
    getParentRoute: () => PrivateDashboardRequestsRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateRouteImport
      parentRoute: typeof rootRoute
    }
    '/_public-only': {
      id: '/_public-only'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicOnlyRouteImport
      parentRoute: typeof rootRoute
    }
    '/_private/dashboard': {
      id: '/_private/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof PrivateDashboardRouteImport
      parentRoute: typeof PrivateRouteImport
    }
    '/(public)/intake': {
      id: '/(public)/intake'
      path: '/intake'
      fullPath: '/intake'
      preLoaderRoute: typeof publicIntakeImport
      parentRoute: typeof rootRoute
    }
    '/_public-only/login': {
      id: '/_public-only/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PublicOnlyLoginImport
      parentRoute: typeof PublicOnlyRouteImport
    }
    '/_public-only/signup': {
      id: '/_public-only/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof PublicOnlySignupImport
      parentRoute: typeof PublicOnlyRouteImport
    }
    '/_private/dashboard/requests': {
      id: '/_private/dashboard/requests'
      path: '/requests'
      fullPath: '/dashboard/requests'
      preLoaderRoute: typeof PrivateDashboardRequestsRouteImport
      parentRoute: typeof PrivateDashboardRouteImport
    }
    '/_private/dashboard/experts': {
      id: '/_private/dashboard/experts'
      path: '/experts'
      fullPath: '/dashboard/experts'
      preLoaderRoute: typeof PrivateDashboardExpertsImport
      parentRoute: typeof PrivateDashboardRouteImport
    }
    '/_private/dashboard/requests/$requestId': {
      id: '/_private/dashboard/requests/$requestId'
      path: '/$requestId'
      fullPath: '/dashboard/requests/$requestId'
      preLoaderRoute: typeof PrivateDashboardRequestsRequestIdImport
      parentRoute: typeof PrivateDashboardRequestsRouteImport
    }
    '/_private/dashboard/requests/': {
      id: '/_private/dashboard/requests/'
      path: '/'
      fullPath: '/dashboard/requests/'
      preLoaderRoute: typeof PrivateDashboardRequestsIndexImport
      parentRoute: typeof PrivateDashboardRequestsRouteImport
    }
  }
}

// Create and export the route tree

interface PrivateDashboardRequestsRouteRouteChildren {
  PrivateDashboardRequestsRequestIdRoute: typeof PrivateDashboardRequestsRequestIdRoute
  PrivateDashboardRequestsIndexRoute: typeof PrivateDashboardRequestsIndexRoute
}

const PrivateDashboardRequestsRouteRouteChildren: PrivateDashboardRequestsRouteRouteChildren =
  {
    PrivateDashboardRequestsRequestIdRoute:
      PrivateDashboardRequestsRequestIdRoute,
    PrivateDashboardRequestsIndexRoute: PrivateDashboardRequestsIndexRoute,
  }

const PrivateDashboardRequestsRouteRouteWithChildren =
  PrivateDashboardRequestsRouteRoute._addFileChildren(
    PrivateDashboardRequestsRouteRouteChildren,
  )

interface PrivateDashboardRouteRouteChildren {
  PrivateDashboardRequestsRouteRoute: typeof PrivateDashboardRequestsRouteRouteWithChildren
  PrivateDashboardExpertsRoute: typeof PrivateDashboardExpertsRoute
}

const PrivateDashboardRouteRouteChildren: PrivateDashboardRouteRouteChildren = {
  PrivateDashboardRequestsRouteRoute:
    PrivateDashboardRequestsRouteRouteWithChildren,
  PrivateDashboardExpertsRoute: PrivateDashboardExpertsRoute,
}

const PrivateDashboardRouteRouteWithChildren =
  PrivateDashboardRouteRoute._addFileChildren(
    PrivateDashboardRouteRouteChildren,
  )

interface PrivateRouteRouteChildren {
  PrivateDashboardRouteRoute: typeof PrivateDashboardRouteRouteWithChildren
}

const PrivateRouteRouteChildren: PrivateRouteRouteChildren = {
  PrivateDashboardRouteRoute: PrivateDashboardRouteRouteWithChildren,
}

const PrivateRouteRouteWithChildren = PrivateRouteRoute._addFileChildren(
  PrivateRouteRouteChildren,
)

interface PublicOnlyRouteRouteChildren {
  PublicOnlyLoginRoute: typeof PublicOnlyLoginRoute
  PublicOnlySignupRoute: typeof PublicOnlySignupRoute
}

const PublicOnlyRouteRouteChildren: PublicOnlyRouteRouteChildren = {
  PublicOnlyLoginRoute: PublicOnlyLoginRoute,
  PublicOnlySignupRoute: PublicOnlySignupRoute,
}

const PublicOnlyRouteRouteWithChildren = PublicOnlyRouteRoute._addFileChildren(
  PublicOnlyRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof PublicOnlyRouteRouteWithChildren
  '/dashboard': typeof PrivateDashboardRouteRouteWithChildren
  '/intake': typeof publicIntakeRoute
  '/login': typeof PublicOnlyLoginRoute
  '/signup': typeof PublicOnlySignupRoute
  '/dashboard/requests': typeof PrivateDashboardRequestsRouteRouteWithChildren
  '/dashboard/experts': typeof PrivateDashboardExpertsRoute
  '/dashboard/requests/$requestId': typeof PrivateDashboardRequestsRequestIdRoute
  '/dashboard/requests/': typeof PrivateDashboardRequestsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PublicOnlyRouteRouteWithChildren
  '/dashboard': typeof PrivateDashboardRouteRouteWithChildren
  '/intake': typeof publicIntakeRoute
  '/login': typeof PublicOnlyLoginRoute
  '/signup': typeof PublicOnlySignupRoute
  '/dashboard/experts': typeof PrivateDashboardExpertsRoute
  '/dashboard/requests/$requestId': typeof PrivateDashboardRequestsRequestIdRoute
  '/dashboard/requests': typeof PrivateDashboardRequestsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_private': typeof PrivateRouteRouteWithChildren
  '/_public-only': typeof PublicOnlyRouteRouteWithChildren
  '/_private/dashboard': typeof PrivateDashboardRouteRouteWithChildren
  '/(public)/intake': typeof publicIntakeRoute
  '/_public-only/login': typeof PublicOnlyLoginRoute
  '/_public-only/signup': typeof PublicOnlySignupRoute
  '/_private/dashboard/requests': typeof PrivateDashboardRequestsRouteRouteWithChildren
  '/_private/dashboard/experts': typeof PrivateDashboardExpertsRoute
  '/_private/dashboard/requests/$requestId': typeof PrivateDashboardRequestsRequestIdRoute
  '/_private/dashboard/requests/': typeof PrivateDashboardRequestsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/dashboard'
    | '/intake'
    | '/login'
    | '/signup'
    | '/dashboard/requests'
    | '/dashboard/experts'
    | '/dashboard/requests/$requestId'
    | '/dashboard/requests/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/dashboard'
    | '/intake'
    | '/login'
    | '/signup'
    | '/dashboard/experts'
    | '/dashboard/requests/$requestId'
    | '/dashboard/requests'
  id:
    | '__root__'
    | '/'
    | '/_private'
    | '/_public-only'
    | '/_private/dashboard'
    | '/(public)/intake'
    | '/_public-only/login'
    | '/_public-only/signup'
    | '/_private/dashboard/requests'
    | '/_private/dashboard/experts'
    | '/_private/dashboard/requests/$requestId'
    | '/_private/dashboard/requests/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PrivateRouteRoute: typeof PrivateRouteRouteWithChildren
  PublicOnlyRouteRoute: typeof PublicOnlyRouteRouteWithChildren
  publicIntakeRoute: typeof publicIntakeRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PrivateRouteRoute: PrivateRouteRouteWithChildren,
  PublicOnlyRouteRoute: PublicOnlyRouteRouteWithChildren,
  publicIntakeRoute: publicIntakeRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_private",
        "/_public-only",
        "/(public)/intake"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_private": {
      "filePath": "_private/route.tsx",
      "children": [
        "/_private/dashboard"
      ]
    },
    "/_public-only": {
      "filePath": "_public-only/route.tsx",
      "children": [
        "/_public-only/login",
        "/_public-only/signup"
      ]
    },
    "/_private/dashboard": {
      "filePath": "_private/dashboard/route.tsx",
      "parent": "/_private",
      "children": [
        "/_private/dashboard/requests",
        "/_private/dashboard/experts"
      ]
    },
    "/(public)/intake": {
      "filePath": "(public)/intake.tsx"
    },
    "/_public-only/login": {
      "filePath": "_public-only/login.tsx",
      "parent": "/_public-only"
    },
    "/_public-only/signup": {
      "filePath": "_public-only/signup.tsx",
      "parent": "/_public-only"
    },
    "/_private/dashboard/requests": {
      "filePath": "_private/dashboard/requests/route.tsx",
      "parent": "/_private/dashboard",
      "children": [
        "/_private/dashboard/requests/$requestId",
        "/_private/dashboard/requests/"
      ]
    },
    "/_private/dashboard/experts": {
      "filePath": "_private/dashboard/experts.tsx",
      "parent": "/_private/dashboard"
    },
    "/_private/dashboard/requests/$requestId": {
      "filePath": "_private/dashboard/requests/$requestId.tsx",
      "parent": "/_private/dashboard/requests"
    },
    "/_private/dashboard/requests/": {
      "filePath": "_private/dashboard/requests/index.tsx",
      "parent": "/_private/dashboard/requests"
    }
  }
}
ROUTE_MANIFEST_END */
